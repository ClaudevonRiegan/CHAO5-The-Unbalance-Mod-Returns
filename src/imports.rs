pub mod BuildImports {
    pub use {
        smash::app::*,
        smash::phx::Hash40,
        smash::phx::Vector2f,
        smash::phx::Vector3f,
        smash::hash40,
        smash::lib::lua_const::*,
        smash::lib::L2CValue,
        smash::lib::L2CAgent,
        smash::lib::{
            L2CValueType::*, 
            L2CValueType, 
            L2CTable, 
            L2CTable_meta, 
            L2CInnerFunctionBase, 
            L2CValueInner
        },
        smash::app::Fighter,
        smash::app::lua_bind::*,
        smash::app::lua_bind::KineticEnergy,
        smashline::*,
        smash_script::{*, macros::*},
        smash::lua2cpp::*,
        smash::lua2cpp::L2CAgentBase,
        smash::lua2cpp::{L2CFighterCommon, L2CFighterBase},
        smash::app::sv_animcmd::{
            frame, 
            wait, 
            execute,
            get_value_float, 
            get_value_int, 
            wait_loop_clear, 
            wait_loop, 
            stop, 
            wait_loop_sync_mot, 
            frame_clear,
            FT_CATCH_STOP,
            FT_START_CUTIN_arg1,
            REQ_MOTION_CAMERA,
            CHECK_VALID_START_CAMERA,
            IS_EXIST_ARTICLE,
            SET_SPEED,
            CHECK_FINISH_CAMERA_IF_NOT_HP_MODE,
            EFFECT_FOLLOW_COLOR,
            SET_RATE_ARTICLE,
            SET_AIR,
            EFFECT_FOLLOW_RND,
            EFFECT_BRANCH_SITUATION,
            CLR_SPEED,
            ADD_SPEED_NO_LIMIT,
        },
        smash::app::{sv_information},
        crate::globals::*,
        crate::utils::*,
        crate::utils::FIGHTER_CUTIN_MANAGER,
        crate::utils::get_entry_id,
        crate::helper::{
            LAST_EFFECT_SET_WORK_INT,
            EFFECT_OFF_HANDLE,
            FT_IS_SAME_FIGHTER_CATEGORY,
            EFFECT_FOLLOW_FLIP_arg13,
            EFFECT_GLOBAL,
            DOWN_EFFECT,
        },
        crate::common::status::glide_param::GlideParams,
        crate::common::status::glide::KineticUtility,
        crate::common::FIGHTER_BOOL_1,
        crate::common::FIGHTER_BOOL_2,
        crate::common::FIGHTER_BOOL_3,
        crate::common::{get_player_number},
        skyline::{c_str, from_c_str, nn::ro::LookupSymbol},
        skyline::nro::{self, NroInfo},
        std::f32::consts::PI,
        singletons::*,
        smash::app::lua_bind::FighterCutInManager,
        smash::app::lua_bind::BattleObjectWorld,
        smash2,
        smash2::app::BattleObjectModuleAccessor,
    };
}